---
import "@/styles/app.css";

import { BackToHomeLink } from "@/components/back-to-home-link";
import { BrowserSupport } from "@/components/browser-support";
import { MdnDoc } from "@/components/mdn-doc";
import { PageHeader } from "@/components/page/header";
import { PageSection } from "@/components/page/section";
import { PageSubHeader } from "@/components/page/sub-header";
import { Layout } from "@/layouts/layout";
import styles from "./_styles.module.css";

const title = "mask-image";
---

<Layout title={title}>
  <PageHeader title={title} />
  <PageSection>
    <MdnDoc path="Web/CSS/mask-image" text={title}>
      the mask-image css property sets the image that is used as mask layer for
      an element. by default this means the alpha channel of the mask image will
      be multiplied with the alpha channel of the element. this can be
      controlled with the mask-mode property.
    </MdnDoc>
  </PageSection>
  <PageSection>
    <PageSubHeader
      id="horizontal-scrollable-content"
      title="horizontal scrollable content"
    />
    <p>try scrolling horizontally.</p>
    <div class={styles.example1Container}>
      <div
        class:list={[styles.example1, styles.example1MaskRight]}
        tabindex="0"
      >
        lorem ipsum dolor sit amet, consectetur adipiscing elit. integer vitae
        leo in orci dapibus tristique.
      </div>
    </div>
  </PageSection>
  <PageSection>
    <PageSubHeader
      id="vertically-scrollable-content"
      title="vertically scrollable content"
    />
    <p>try scrolling vertically.</p>
    <div class={styles.example2Container}>
      <div
        class:list={[styles.example2, styles.example2MaskBottom]}
        tabindex="0"
      >
        lorem ipsum dolor sit amet, consectetur adipiscing elit. integer vitae
        leo in orci dapibus tristique. mauris elementum iaculis erat eget
        vehicula. in imperdiet enim quis nulla laoreet pretium. in blandit
        lobortis ipsum sed pellentesque. suspendisse potenti. nullam
        sollicitudin posuere nisi, vel dignissim orci pulvinar vel. nulla eu
        lacus tortor. cras vel lobortis orci, vitae accumsan turpis. praesent
        venenatis eros risus, at tempus urna tristique ac. duis fermentum neque
        ante, eu venenatis diam scelerisque in. quisque sed cursus elit. nunc id
        sem blandit, luctus diam quis, condimentum tellus.
      </div>
    </div>
  </PageSection>
  <PageSection>
    <BrowserSupport
      items={[
        {
          value: "mask-image",
          chrome: "120",
          firefox: "53",
          safari: "15.4",
        },
        {
          value: "overscroll-behavior",
          chrome: "63",
          firefox: "59",
          safari: "16",
        },
      ]}
    />
  </PageSection>
  <BackToHomeLink />
  <script>
    import styles from "./_styles.module.css";

    let selector = "";

    // example1
    selector = `.${styles.example1}`;
    const example1 = document.querySelector(selector);
    if (!example1) throw new Error(`${selector} does not exists.`);

    example1.addEventListener("scroll", () => {
      const scrollLeft = example1.scrollLeft;
      const scrollWidth = example1.scrollWidth;
      const clientWidth = example1.clientWidth;

      if (scrollLeft <= 10) {
        example1.classList.remove(styles.example1Mask, styles.example1MaskLeft);
        example1.classList.add(styles.example1MaskRight);
      } else if (scrollLeft + clientWidth + 10 >= scrollWidth) {
        example1.classList.remove(
          styles.example1Mask,
          styles.example1MaskRight,
        );
        example1.classList.add(styles.example1MaskLeft);
      } else {
        example1.classList.remove(
          styles.example1MaskLeft,
          styles.example1MaskRight,
        );
        example1.classList.add(styles.example1Mask);
      }
    });

    // example2
    selector = `.${styles.example2}`;
    const example2 = document.querySelector(selector);
    if (!example2) throw new Error(`${selector} does not exists.`);

    example2.addEventListener("scroll", () => {
      const scrollTop = example2.scrollTop;
      const scrollHeight = example2.scrollHeight;
      const clientHeight = example2.clientHeight;

      if (scrollTop <= 10) {
        example2.classList.remove(styles.example2Mask, styles.example2MaskTop);
        example2.classList.add(styles.example2MaskBottom);
      } else if (scrollTop + clientHeight + 10 >= scrollHeight) {
        example2.classList.remove(
          styles.example2Mask,
          styles.example2MaskBottom,
        );
        example2.classList.add(styles.example2MaskTop);
      } else {
        example2.classList.remove(
          styles.example2MaskTop,
          styles.example2MaskBottom,
        );
        example2.classList.add(styles.example2Mask);
      }
    });
  </script>
</Layout>
