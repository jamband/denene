---
import "@/styles/app.css";

import { BackToHomeLink } from "@/components/back-to-home-link";
import { BrowserSupport } from "@/components/browser-support";
import { Code } from "@/components/code";
import { MdnDoc } from "@/components/mdn-doc";
import { PageHeader } from "@/components/page/header";
import { PageSection } from "@/components/page/section";
import { PageSubHeader } from "@/components/page/sub-header";
import { IconX } from "@/icons/x";
import { Layout } from "@/layouts/layout";
import styles from "./_styles.module.css";

const title = "<dialog>";
---

<Layout title={title}>
  <PageHeader title={title} />
  <PageSection>
    <MdnDoc path="Web/HTML/Element/dialog" text={title}>
      the <Code code="<dialog>" inline /> html element represents a dialog box or
      other interactive component, such as a dismissible alert, inspector, or subwindow.
    </MdnDoc>
  </PageSection>
  <PageSection>
    <PageSubHeader title="1" subTitle="e.g. simple alert" />
    <button id="example1-button" class={styles.button}>press me</button>
    <dialog id="example1" aria-labelledby="example1-title">
      <div class={styles.dialog}>
        <form method="dialog" class={styles.form}>
          <div class={styles.formHeader}>
            <h3 id="example1-title">simple alert</h3>
            <button
              type="submit"
              class={styles.close}
              aria-label="close"
              autofocus
              ><IconX class={styles.closeIcon} />
            </button>
          </div>
          <div>
            press the [x] icon or the <Code code="esc" inline /> key to close it.
          </div>
        </form>
      </div>
    </dialog>
  </PageSection>
  <PageSection>
    <PageSubHeader title="2" subTitle="e.g. confirm" />
    <button id="example2-button" class={styles.button}>press me</button>
    <dialog id="example2" aria-labelledby="example2-title">
      <div class={styles.dialog}>
        <form method="dialog" class={styles.form}>
          <div class={styles.formHeader}>
            <h3 id="example2-title">confirm</h3>
          </div>
          <div>
            you can also close it by pressing the
            <Code code="esc" inline /> key.
          </div>
          <footer class={styles.formFooter}>
            <button
              type="submit"
              class={styles.formFooterButton}
              value="it was canceled."
              autofocus>cancel</button
            >
            <button
              type="submit"
              class={styles.formFooterButton}
              value="it was ok.">ok</button
            >
          </footer>
        </form>
      </div>
    </dialog>
    <p id="action-result" class={styles.actionResult}></p>
  </PageSection>
  <PageSection>
    <BrowserSupport
      items={[
        {
          value: title,
          chrome: "37",
          firefox: "98",
          safari: "15.4",
        },
        {
          value: "::backdrop",
          chrome: "37",
          firefox: "47",
          safari: "15.4",
        },
        {
          value: "backdrop-filter",
          chrome: "76",
          firefox: "103",
          safari: "9",
        },
        {
          value: "scrollbar-gutter",
          chrome: "94",
          firefox: "97",
          safari: "no",
        },
      ]}
    />
  </PageSection>
  <BackToHomeLink />
  <script>
    const example1 = document.querySelector<HTMLDialogElement>("#example1");
    if (!example1) throw new Error("#example1 element does not exists.");

    const example1Button =
      document.querySelector<HTMLButtonElement>("#example1-button");
    if (!example1Button)
      throw new Error("#example1-button element does not exists.");

    const example2 = document.querySelector<HTMLDialogElement>("#example2");
    if (!example2) throw new Error("#example2 element does not exists.");

    const example2Button =
      document.querySelector<HTMLButtonElement>("#example2-button");
    if (!example2Button)
      throw new Error("#example2-button element does not exists.");

    example1Button.addEventListener("click", () => {
      example1.showModal();
    });

    example1.addEventListener("click", (event) => {
      if (example1 === event.target) example1.close();
    });

    example2Button.addEventListener("click", () => {
      example2.showModal();
    });

    example2.addEventListener("click", (event) => {
      if (example2 === event.target) example2.close();
    });

    example2.addEventListener("close", () => {
      const actionResult =
        document.querySelector<HTMLElement>("#action-result");
      if (!actionResult)
        throw new Error("#action-result element does not exists.");
      actionResult.textContent = example2.returnValue;
    });
  </script>
</Layout>
