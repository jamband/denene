---
import Layout from "@/layouts/Layout.astro";

import BackToHomeLink from "@/components/BackToHomeLink.astro";
import BrowserSupport from "@/components/BrowserSupport.astro";
import Dropdown from "@/components/Dropdown.astro";
import DropdownDivider from "@/components/DropdownDivider.astro";
import DropdownExternalLink from "@/components/DropdownExternalLink.astro";
import DropdownLink from "@/components/DropdownLink.astro";
import MdnDoc from "@/components/MdnDoc.astro";
import PageHeader from "@/components/PageHeader.astro";
import PageSection from "@/components/PageSection.astro";
import PageSubHeader from "@/components/PageSubHeader.astro";

const title = "<details>";
---

<Layout title={title}>
  <PageHeader title={title} />
  <PageSection>
    <MdnDoc path="Web/HTML/Element/details" text={title}>
      the <code>{title}</code> html element creates a disclosure widget in which
      information is visible only when the widget is toggled into an "open"
      state. a summary or label must be provided using the
      <code>&lt;summary&gt;</code> element.
    </MdnDoc>
  </PageSection>
  <PageSection>
    <PageSubHeader title="what tools do you use to build this site?" />
    <details>
      <summary>hosting</summary>
      <p>
        <span class="tool">github pages</span> » you can use github pages to
        host a website about yourself, your organization, or your project
        directly from a repository on github.com.
      </p>
    </details>
    <details>
      <summary>building</summary>
      <p>
        <span class="tool">astro</span> » build faster websites with astro's
        next-gen island architecture.
      </p>
    </details>
    <details>
      <summary>color palette</summary>
      <p>
        <span class="tool">tailwind css</span> » tailwind includes an
        expertly-crafted default color palette out-of-the-box that is a great
        starting point if you don't have your own specific branding in mind.
      </p>
    </details>
  </PageSection>
  <PageSection>
    <PageSubHeader title="dropdown" />
    <p>
      it can also create something like dropdown as an alternative to
      <code>&lt;select&gt;</code>. considering accessibility and semantics, it
      would be better if there was something like <code>&lt;dropdown&gt;</code>.
    </p>
    <div class="dropdowns">
      <Dropdown id="more-links" label="press me" class="dropdown">
        <DropdownLink href="/denene/">home</DropdownLink>
        <DropdownLink href="/denene/about/">about</DropdownLink>
        <DropdownLink href="/denene/contact/">contact</DropdownLink>
        <DropdownDivider />
        <DropdownExternalLink href="https://github.com/jamband/denene">
          github
        </DropdownExternalLink>
      </Dropdown>
      <Dropdown id="more-links-without-label" class="dropdown">
        <DropdownLink href="/denene/">home</DropdownLink>
        <DropdownLink href="/denene/about/">about</DropdownLink>
        <DropdownLink href="/denene/contact/">contact</DropdownLink>
        <DropdownDivider />
        <DropdownExternalLink href="https://github.com/jamband/denene">
          github
        </DropdownExternalLink>
      </Dropdown>
    </div>
  </PageSection>
  <PageSection>
    <BrowserSupport
      items={[
        {
          value: title,
          chrome: "12",
          firefox: "49",
          safari: "6",
        },
        {
          value: "<summary>",
          chrome: "12",
          firefox: "49",
          safari: "6",
        },
      ]}
    />
  </PageSection>
  <BackToHomeLink />
</Layout>

<style>
  p {
    margin-bottom: 1rem;
  }

  details {
    border: 1px solid rgb(var(--gray-600));
    border-radius: 0.25rem;
    margin-bottom: 0.5rem;
    padding: 0.25rem 0.5rem;
  }

  details > p {
    background: rgb(var(--gray-700));
    border-radius: 0.25rem;
    color: rgb(var(--gray-400));
    margin-bottom: 0;
    padding: 1rem;
  }

  details[open] {
    color: rgb(var(--gray-100));
    padding-bottom: 0.5rem;
  }

  summary {
    padding: 0.25rem 0;
  }

  .tool {
    color: rgb(var(--gray-100));
    font-weight: bold;
  }

  .dropdowns {
    display: flex;
    gap: 1rem;
  }

  .dropdown {
    background: rgb(var(--gray-700));
    border: 1px solid rgb(var(--gray-600));
  }
</style>
